package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @PostMapping // 新增插入
    public Boolean save(@RequestBody ${entity} ${table.entityPath}) {
            return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
            }

    @DeleteMapping("/{id}") //删
    public Boolean delete(@PathVariable Integer id) {
            return ${table.entityPath}Service.removeById(id);
            }

    @PostMapping("/del/batch")  //  批量删除
    public Boolean deleteBatch(@RequestBody List<Integer> ids){ // 传入的ids是List 数组型,但获取到的是一整个对象，里面不仅有id 还有其他属性 (multipleSelection)
            return ${table.entityPath}Service.removeByIds(ids);
            }

    @GetMapping   //列出所有
    public List<${entity}> findAll() {
            return ${table.entityPath}Service.list();
            }

    @GetMapping("/{id}") // 传入id 搜索
    public entity findOne(@PathVariable Integer id) {
            return ${table.entityPath}Service.getById(id);
            }

    @GetMapping("/pageMbP") // 分页
    public IPage<${entity}> findPage(@RequestParam Integer pageNum,
                                    @RequestParam Integer pageSize) {
        IPage<User> page = new Page<>(pageNum,pageSize);
        QueryWrapper<User> queryWrapper = new QueryWrapper<>();
        return ${table.entityPath}Service.page(page, queryWrapper);
        }

    }
#end
